{"version":3,"sources":["components/Loading.js","components/Header.js","components/ImageBlock.js","components/BigBlocks.js","components/TextBlocks.js","components/Footer.js","components/Home.js","components/NotFound.js","App.js","reportWebVitals.js","index.js"],"names":["Loading","className","Header","props","href","categories","slice","reverse","map","category","ImageBlock","src","image","alt","title","date","BigBlocks","author","TextBlocks","text","Footer","Home","hashLocat","useLocation","hash","useState","isLoaded","setIsLoaded","imageBlocks","bigBlocks","textBlocks","fake","setFake","useEffect","fetch","then","response","json","data","console","log","filter","obj","substring","imageB","bigB","textB","NotFound","App","path","element","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.f03adfd8.chunk.js","sourcesContent":["import React from \"react\";\r\nimport \"../styles/Loading.scss\";\r\n\r\nfunction Loading() {\r\n  return (\r\n\r\n    <div className=\"loadingContent\">\r\n      <p>Loading...</p>\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default Loading;","import React from \"react\";\r\nimport \"../styles/Header.scss\";\r\n\r\nfunction Header(props) {\r\n\r\n  return (\r\n    <div className=\"topBar\">\r\n      <ul>\r\n        <li><a href=\"#thewire\">THE WIRE</a></li>  \r\n        {/* slice makes a copy of the original array by taking a slice from the element at index 0 to the last element */}\r\n        {props.categories.slice(0).reverse().map((category) => {\r\n          return <li><a href={`#${category}`}>{category}</a></li>;\r\n        })}\r\n      </ul>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Header;","import React from \"react\";\r\nimport \"../styles/ImageBlock.scss\";\r\n\r\nfunction ImageBlock(props) {\r\n  return (\r\n\r\n    <div className=\"imageBlocksContent\">\r\n    \r\n        <img src={props.image} className=\"imageBack\" alt=\"placeholder\" />\r\n        <div className=\"category\">\r\n          <p className=\"categoryText\">{props.category}</p>\r\n        </div>\r\n        <div className=\"imageBlotext\">\r\n          <p className=\"textSectionH1\">{props.title}</p>\r\n          <p className=\"textSectionT1\">{props.date}</p>\r\n        </div>\r\n\r\n    </div>\r\n\r\n  );\r\n\r\n}\r\n\r\nexport default ImageBlock;\r\n\r\n","import React from \"react\";\r\nimport \"../styles/BigBlocks.scss\";\r\n\r\nfunction BigBlocks(props) {\r\n  return (\r\n    <div className=\"bigBlocksContent\">\r\n      {/* style={{backgroundImage: `url(\"https://via.placeholder.com/435x300\")`, backgroundPosition: 'top', */}\r\n      {/* backgroundSize: 'contain', backgroundRepeat: 'no-repeat'}} */}\r\n      <img src={props.image} className=\"imageBack2\" alt=\"placeholder\" />\r\n      <div className=\"category2\">\r\n        <p className=\"categoryText2\">{props.category}</p>\r\n      </div>\r\n      <div className=\"bigBloText\">\r\n        <div className=\"footerBigBlock\">\r\n          <p className=\"textSectionH2\">{props.title}</p>\r\n          <p className=\"textSectionT2\">{props.date}</p>\r\n        </div>\r\n        <img src={props.author} className=\"ellipse\" alt=\"author\" />\r\n      </div>\r\n    </div>\r\n\r\n  );\r\n}\r\n\r\nexport default BigBlocks;","import React from \"react\";\r\nimport \"../styles/TextBlocks.scss\";\r\n\r\nfunction TextBlocks(props) {\r\n  return (\r\n\r\n<div className=\"textBlocksContent\">\r\n  <p className=\"textSectionH3\">{props.title}</p>\r\n  <div>\r\n    <img src={props.image} className=\"imageTLcorner\" alt=\"placeholder\" />\r\n    <p className=\"textArticle\">{props.text}</p>\r\n  </div>\r\n  <div className=\"footerTextBlock\">\r\n    <img src={props.author} className=\"ellipse\" alt=\"author\" />\r\n    <p className=\"textSectionT3\">{props.date}</p>\r\n    <p className=\"categoryText3\">{props.category}</p>\r\n  </div>\r\n</div>\r\n\r\n);\r\n}\r\n\r\nexport default TextBlocks;\r\n","import React from \"react\";\r\nimport \"../styles/Footer.scss\";\r\n\r\nfunction Footer() {\r\n  return (\r\n    <div className=\"foot\">\r\n      <p>Copyright 2021 - Mediahuis N.V.</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Footer;","import React from \"react\";\r\nimport \"../styles/Home.scss\";\r\nimport Loading from './Loading';\r\nimport Header from './Header';\r\nimport ImageBlock from './ImageBlock';\r\nimport BigBlocks from './BigBlocks';\r\nimport TextBlocks from './TextBlocks';\r\nimport Footer from './Footer';\r\nimport {useLocation} from 'react-router';\r\nimport { useState, useEffect } from 'react';\r\n\r\nfunction Home() {\r\n\r\n  const location = useLocation();\r\n  const hashLocat = location.hash;\r\n  const [isLoaded, setIsLoaded] = useState(false);\r\n  const [fake, setFake] = useState({\r\n    categories: [],\r\n    imageBlocks: [],\r\n    bigBlocks: [],\r\n    textBlocks: []\r\n  });\r\n  // 1. first my array will be empty\r\n  // 2. use effect is used in order to have the initial state of my data. Empty array at the end serves this purpose, data will be loaded only once.\r\n  // 3. once the data will be loaded it will call the fakeNews from use effect \r\n  useEffect(()=>{\r\n      const fakeNews = () => {\r\n      fetch(\"https://jsonkeeper.com/b/TEJ3\")\r\n      .then(response => response.json())\r\n      .then((data) => {\r\n        setIsLoaded(true);\r\n        console.log(data);\r\n        setFake(data);\r\n      });\r\n    };\r\n    fakeNews();\r\n    // my initial array is updated by the object array\r\n  }, []);\r\n\r\n  if (!isLoaded) {\r\n    return <Loading />\r\n  } else {\r\n    return (\r\n      <>\r\n\r\n      {/* where categories will be imported as props.categories in Header comp */}\r\n      <Header categories={fake.categories}/>\r\n      \r\n      <div className=\"content\">\r\n        \r\n        <div className=\"imageBlock\">\r\n        {fake.imageBlocks.filter(obj => {return hashLocat === \"\" || hashLocat === \"#All\" || obj.category === hashLocat.substring(1);}).map((imageB) => {\r\n          return (\r\n          <ImageBlock \r\n            image={imageB.image}\r\n            category={imageB.category}\r\n            title={imageB.title}\r\n            date={imageB.date}\r\n          />\r\n          );\r\n        })}\r\n        </div>\r\n\r\n        <div className=\"bigBlock\">\r\n        {fake.bigBlocks.filter(obj => {return hashLocat === \"\" || hashLocat === \"#All\" || obj.category === hashLocat.substring(1);}).map((bigB) => {\r\n          return (\r\n          <BigBlocks \r\n            image={bigB.image}\r\n            category={bigB.category}\r\n            title={bigB.title}\r\n            date={bigB.date}\r\n            author={bigB.author}\r\n          />\r\n          );\r\n        })}\r\n        </div>\r\n\r\n        <div className=\"textBlock\">\r\n        {fake.textBlocks.filter(obj => {return hashLocat === \"\" || hashLocat === \"#All\" || obj.category === hashLocat.substring(1);}).map((textB) => {\r\n          return (\r\n          <TextBlocks \r\n            title={textB.title}\r\n            image={textB.image}\r\n            text={textB.text}\r\n            author={textB.author}\r\n            date={textB.date}\r\n            category={textB.category}\r\n          />\r\n          );\r\n        })}\r\n        </div>\r\n\r\n      </div>\r\n\r\n      <Footer />\r\n      \r\n      </>\r\n    )\r\n  }\r\n}\r\n\r\nexport default Home;","import React from \"react\";\r\nimport \"../styles/NotFound.scss\";\r\n\r\nfunction NotFound() {\r\n  return (\r\n    <div className=\"notFound\">\r\n      {/* <img src={notFound} className=\"notFoundIm\" alt=\"not found background\" /> */}\r\n      <p className=\"notFoundTe\">Not Found</p>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default NotFound;","import React from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\nimport './App.scss';\nimport Home from './components/Home';\nimport NotFound from './components/NotFound';\n\nfunction App() {\n  return (\n\n    <Router>\n      <div className=\"wrapper\">\n        <Routes>\n          <Route path=\"/\" element={<Home/>} />\n          <Route path=\"/fake_newspaper_API/\" element={<Home/>} />\n          <Route path=\"*\" element={<NotFound/>} />\n        </Routes>        \n      </div>\n    </Router>\n\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}